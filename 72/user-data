#cloud-config
autoinstall:
  # https://cloudinit.readthedocs.io/en/latest/index.html
  # https://cloudinit.readthedocs.io/en/latest/topics/examples.html
  # config version 1.11.7
  #
  # Storage size: 72GB
  #         Swap: 3GB
  #
  id: "ubuntu-server-minimized"
  refresh-installer:
    update: no
    channel: "stable"
  # All Ubuntu specific `identity:` directives moved to `user-data`
  # section
  #
  # Configure the initial user for the system
  # identity:
  #
  interactive-sections: []
  apt:
    disable_components: []
    geoip: true
    preserve_sources_list: false
    primary:
    - arches:
      - amd64
      - i386
      uri: http://us.archive.ubuntu.com/ubuntu
      search_dns: true
    - arches:
      - default
      uri: http://ports.ubuntu.com/ubuntu-ports
  apt_pipelining: os
  datasource:
    NoCloud:
      # Default seedfrom is None
      # if found, then it should contain a url with:
      #   <url>/user-data and <url>/meta-data
      # seedfrom: http://my.example.com/i-abcde
      seedfrom: None
      # fs_label: the label on filesystems to be searched for NoCloud source
      fs_label: cidata
      # These are optional, but allow you to basically provide a datasource
      # right here
      user-data: []
      meta-data: []
        # instance-id:
        # local-hostname:
  drivers:
    install: false
  # Reporting progress information on `tty1`
  reporting:
    builtin:
      type: print
  # This not default cloud-init behavior is equivalent to this cloud-config:
  preserve_hostname: true
  prefer_fqdn_over_hostname: false
  manage_etc_hosts: false
  # Whether to manage the resolv.conf file
  manage_resolv_conf: false
  # Optional. Note for Ubuntu/Debian distros
  # Ubuntu/Debian it is recommended that DNS be configured via the standard
  # /etc/network/interfaces configuration file.
  resolv_conf: {}
    # domain:
    # searchdomains:
  kernel:
    package: linux-generic
  keyboard:
    layout: us
    toggle: null
    variant: ""
  locale: en_US.UTF-8
  timezone: Europe/Kiev
  network:
    # https://netplan.io/reference
    version: 2
    ethernets:
      all-ens:
        match:
          name: "en*"
        dhcp4: true
        dhcp6: true
        link-local:
          - ipv4
          - ipv6
        dhcp-identifier: mac
    # renderer: NetworkManager
  storage:
    # https://curtin.readthedocs.io/en/latest/topics/storage.html
    config:
    - ptable: gpt
      path: /dev/sda
      preserve: false
      name: ''
      grub_device: false
      type: disk
      id: disk-sda
    - device: disk-sda
      size: 1127219200
      wipe: superblock
      flag: boot
      number: 1
      preserve: false
      grub_device: true
      type: partition
      id: partition-0
    - fstype: fat32
      volume: partition-0
      preserve: false
      type: format
      id: format-0
    - device: disk-sda
      size: 536870912
      wipe: superblock
      flag: ''
      number: 2
      preserve: false
      grub_device: false
      type: partition
      id: partition-1
    - fstype: ext4
      volume: partition-1
      preserve: false
      type: format
      id: format-1
    - device: disk-sda
      size: 75643224064
      wipe: superblock
      flag: ''
      number: 3
      preserve: false
      grub_device: false
      type: partition
      id: partition-2
    - name: vg0
      devices:
      - partition-2
      preserve: false
      type: lvm_volgroup
      id: lvm_volgroup-0
    - name: lv-tmp
      volgroup: lvm_volgroup-0
      size: 3221225472B
      wipe: superblock
      preserve: false
      type: lvm_partition
      id: lvm_partition-0
    - fstype: btrfs
      volume: lvm_partition-0
      preserve: false
      type: format
      id: format-2
    - name: lv-root
      volgroup: lvm_volgroup-0
      size: 61203283968B
      wipe: superblock
      preserve: false
      type: lvm_partition
      id: lvm_partition-1
    - fstype: btrfs
      volume: lvm_partition-1
      preserve: false
      type: format
      id: format-3
    - path: /
      device: format-3
      type: mount
      id: mount-3
    - name: lv-home
      volgroup: lvm_volgroup-0
      size: -1
      wipe: superblock
      preserve: false
      type: lvm_partition
      id: lvm_partition-2
    - fstype: btrfs
      volume: lvm_partition-2
      preserve: false
      type: format
      id: format-4
    - path: /home
      device: format-4
      type: mount
      id: mount-4
    - path: /boot
      device: format-1
      type: mount
      id: mount-1
    - path: /tmp
      device: format-2
      type: mount
      id: mount-2
    - path: /boot/efi
      device: format-0
      type: mount
      id: mount-0
    swap:
      # https://curtin.readthedocs.io/en/latest/topics/config.html#swap
      swap: 0
      filename: swap.img
      maxsize: 3221225472B # size in bytes by default
      # "auto" or size in bytes, setting 'size' to 0 will disable swap
      size: 1073741824B
      force: false
  resize_rootfs: true
  mounts: []
    # set up mount points
    # 'mounts' contains a list of lists
    #  the inner list are entries for an /etc/fstab line
    #
    # default:
    # mounts:
    #  - [ ephemeral0, /mnt ]
    #  - [ swap, none, swap, sw, 0, 0 ]
  # These values are used to fill in any entries in 'mounts' that are not
  # complete.
  mount_default_fields: [ None, None, "auto", "defaults,nofail", "0", "1" ]
  multipath:
    mode: disabled # <[‘auto’, [‘disabled’]>
  ssh:
    allow-pw: true
    # Add each entry to ~/.ssh/authorized_keys for the configured user or the
    # first user defined in the user definition directive.
    authorized-keys: []
    install-server: true
  updates: all # available values <['all', ['security']>
  package_update: true
  package_upgrade: true
  package_reboot_if_required: true
  packages:
    - git
    - jq
    - less
    - nano
    - open-vm-tools
    - zsh
    - parted
  snaps: []
  late-commands:
    # `apt` commands
    # Optional. All packages installation command moved to 'packages:' directive
    # - curtin in-target --target=/target -- apt install <['package_name(s)']> --yes --no-install-recommends
    #
    # Disabled because 'update' option with value 'all' is used
    #
    # - curtin in-target --target=/target -- apt update
    # - curtin in-target --target=/target -- apt upgrade --yes
    #
    - curtin in-target --target=/target -- apt autoremove --purge --yes --quiet=2
    - curtin in-target --target=/target -- apt clean
    - echo 'Generating a report of installed packages...'
    - curtin in-target --target=/target -- apt list --installed > /target/root/apt-postinstall-report.txt
    - echo '[ Done ]'
    # `sudoers` commands
    - echo 'sudoers file creation for user - ubuntu...'
    - |
        cat > /target/etc/sudoers.d/100-ubuntu <<EOF
        # File created with autoinstall. Timestamp: $(date +%H%M.%F@%T%Z)
        # sudoers file for default system user - ubuntu

        # ubuntu - User privilege specification
        # Cmnd (Cmd for 1.9+) alias specification (disable - sudo su - command)
        Cmd_Alias NO_SU = /usr/bin/su
        Cmd_Alias NO_ROOTPW = /usr/bin/passwd [A-Za-z]*, !/usr/bin/passwd *root*

        # ubuntu - User privilege specification
        ubuntu ALL=(ALL:ALL) NOPASSWD:ALL, !NO_SU, NO_ROOTPW
        EOF
    - |
        cat > /target/etc/sudoers.d/101-wheel << EOF
        # File created with autoinstall. Timestamp: $(date +%H%M.%F@%T%Z)

        # Members of the root group may gain root privileges
        # group 'root', gid 0
        %root ALL=(ALL:ALL) NOPASSWD:ALL
        EOF
    - echo '[ Done ]'
    # `sshd` commands
    - echo 'updating sshd configuration...'
    - |
        cat > /target/etc/ssh/sshd_config.d/100-autoinstall.conf <<EOF
        # File created with autoinstall. Timestamp: $(date +%H%M.%F@%T%Z)
        # This is the sshd server local configuration file.

        Port 22
        AddressFamily any

        # Authentication
        PermitRootLogin no
        PubkeyAuthentication yes
        PermitEmptyPasswords no
        PasswordAuthentication yes
        EOF
    - echo '[ Done ]'
  user-data:
    # Provide cloud-init user-data which will be merged with the user-data
    # the installer produces. If you supply this, you don’t need to supply
    # an `identity` section
    #
    hostname: ULS22041
    # fqdn:
    users:
      - name: ubuntu
        gecos: Ubuntu Default User
        passwd: $6$0Q6/zQnGejA9wM6f$urBHcwCQLQKpq4q4aDGFk.GJ7w/wU4kUZk550xmQYcoGFxdZqgNM4uU/4EbLWzLnzGayU4nv4CWva.0BmeX/a/
        lock_passwd: false
        ssh_authorized_keys:
          - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHMvB4PA2OLbyiASIsHS6voFPH0It32Zq1FfSi5K7MkS ubuntu@local
        create_groups: true
        shell: /bin/bash
        groups: adm, cdrom, sudo, dip, plugdev, lxd
    ca_certs:
      remove_defaults: false
    # Write out content to configuration files
    write_files:
      - path: /root/hosts_file_update.sh
        encoding: text/plain
        owner: root:root
        permissions: '0744'
        content: |
          #!/bin/bash
          # Creating /etc/hosts file

          fqdn_string=$(hostname --fqdn)
          timestamp=$(date +%H%M.%F@%T%Z)

          cat > /etc/hosts <<EOF
          # File created with autoinstall. Timestamp: ${timestamp}
          127.0.0.1 localhost
          127.0.1.1 ${HOSTNAME}

          # The following lines are desirable for IPv6 capable hosts
          ::1 localhost ip6-localhost ip6-loopback
          fe00::0 ip6-localnet
          ff00::0 ip6-mcastprefix
          ff02::1 ip6-allnodes
          ff02::2 ip6-allrouters
          EOF

          exit 0
        defer: true
      - path: /home/ubuntu/.nanorc
        encoding: text/plain
        owner: ubuntu:ubuntu
        permissions: '0644'
        content: |
          # File created with autoinstall

          # Simple custom initialization file for GNU nano.
          #
          # Back up files to the current filename plus a tilde.
          set backup
          # Remember the used search/replace strings for the next session.
          set historylog
          # Display line numbers to the left of the text.
          set linenumbers
          # Enable soft line wrapping (AKA full-line display).
          unset softwrap
          # Allow nano to be suspended.
          set suspend
          # Use this tab size instead of the default; it must be greater than 0.
          set tabsize 4
          # Convert typed tabs to spaces.
          set tabstospaces
          # To include all existing syntax definitions, you can do:
          include "/usr/share/nano/*.nanorc"
          set locking
        defer: true
    # Run post-install commands
    # default: none
    # runcmd contains a list of either lists or a string
    # each item will be executed in order at rc.local like level with
    # output to the console
    #
    runcmd:
      # Update /etc/hosts
      - [ cp, /etc/hosts, /etc/hosts~ ]
      - [ /usr/bin/env, --, /root/hosts_file_update.sh ]
      - [ rm, /root/hosts_file_update.sh]
      # list of 'snap' installed packages
      - |
        snap list --unicode=always > /root/snap-postinstall-report.txt
      # Disabling cloud-init on the first boot
      #  - [ touch, /etc/cloud/cloud-init.disabled ]
    # The message to display at the end of the run
    final_message: |
      cloud-init has finished
      [ Autoinstall completed! ]
      version: $version
  version: 1
